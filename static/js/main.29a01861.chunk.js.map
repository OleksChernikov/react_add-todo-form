{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","api/users.ts","App.tsx","index.tsx"],"names":["UserInfo","key","user","email","name","className","href","TodoInfo","todo","users","id","title","completed","userId","findUser","find","TodoList","todos","map","username","App","useState","setTitle","setUserId","todosFromServer","setTodos","errorText","setErrorTitle","errorUser","setErrorUser","touched","setTouched","action","method","onSubmit","event","preventDefault","trim","newComment","Math","max","htmlFor","type","placeholder","value","onChange","target","onBlur","disabled","usersFromServer","paramUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29a01861.chunk.js","sourcesContent":["import React from 'react';\n\ntype User = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\ntype UserInfoProps = {\n  key: number;\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ key, user }) => {\n  const { email, name } = user;\n\n  return (\n    <a key={key} className=\"UserInfo\" href={email}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\n\ntype Users = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\ntype Todo = {\n  id: number;\n  title: string;\n  completed: boolean\n  userId: number;\n};\n\ntype TodoInfoProps = {\n  todo: Todo;\n  users: Users[];\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo, users }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n  const findUser = users.find((user) => user.id === userId);\n\n  return (\n    <article data-id={id} className={`TodoInfo ${completed && 'TodoInfo--completed'}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {findUser && <UserInfo key={findUser.id} user={findUser} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Todos = {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n};\n\ntype Users = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\ntype TodoListProps = {\n  todos: Todos[];\n  users: Users[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          todo={todo}\n          users={users}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState([...todosFromServer]);\n  const [errorText, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n  const [touched, setTouched] = useState(false);\n\n  function handleTitle() {\n    setTouched(true);\n    setErrorTitle(false);\n  }\n\n  function handleUserId() {\n    setTouched(true);\n    setErrorUser(false);\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    setErrorTitle((!title) || (touched && title.trim() === ''));\n    setErrorUser(userId === 0);\n\n    if (!touched || (touched && (!title || title.trim() === ''))\n      || (touched && userId === 0)) {\n      return;\n    }\n\n    const newIdComment = Math.max(...todos.map((todo) => todo.id), 0) + 1;\n    const newComment = {\n      id: newIdComment,\n      title,\n      completed: false,\n      userId,\n    };\n\n    setTodos([...todos, newComment]);\n    setTitle('');\n    setUserId(0);\n    setErrorTitle(false);\n    setErrorUser(false);\n    setTouched(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"text\">Title:</label>\n          <input\n            id=\"text\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n            onBlur={handleTitle}\n          />\n          {errorText && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:</label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => setUserId(+event.target.value)}\n            onBlur={handleUserId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((paramUser) => (\n              <option key={paramUser.id} value={paramUser.id}>\n                {paramUser.name}\n              </option>\n            ))}\n          </select>\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n        users={usersFromServer}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}