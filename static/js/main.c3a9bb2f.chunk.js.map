{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","api/users.ts","App.tsx","index.tsx"],"names":["UserInfo","key","user","className","href","email","name","TodoInfo","todo","users","id","title","filter","userId","map","TodoList","todos","completed","username","App","useState","text","setText","setUser","usersFromServer","todosFromServer","setTodos","errorText","setErrorText","errorUser","setErrorUser","touched","setTouched","action","method","onSubmit","event","preventDefault","trim","newComment","Math","max","htmlFor","type","placeholder","value","onChange","target","onBlur","disabled","paramUser","ReactDOM","render","document","getElementById"],"mappings":"qNAcaA,EAAoC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KACvD,OACE,mBAAaC,UAAU,WAAWC,KAAMF,EAAKG,MAA7C,SACGH,EAAKI,MADAL,ICKCM,EAAoC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxD,OACE,0BAAS,UAASD,EAAKE,GAAIP,UAAU,+BAArC,UACE,oBAAIA,UAAU,kBAAd,SACGK,EAAKG,QAEPF,EAAMG,QAAO,SAACV,GAAD,OAAUM,EAAKK,SAAWX,EAAKQ,MAAII,KAAI,SAACZ,GAAD,OACnD,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKQ,WCNfK,EAAoC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOP,EAAY,EAAZA,MACzD,OACE,yBAASN,UAAU,WAAnB,SACGa,EAAMF,KAAI,SAACN,GAAD,OACT,cAAC,EAAD,CACEA,KAAMA,EACNC,MAAOA,UC5BF,GACb,CACEC,GAAI,EACJC,MAAO,qBACPM,WAAW,EACXJ,OAAQ,GAEV,CACEH,GAAI,GACJC,MAAO,kBACPM,WAAW,EACXJ,OAAQ,GAEV,CACEH,GAAI,EACJC,MAAO,qCACPM,WAAW,EACXJ,OAAQ,ICjBG,GACb,CACEH,GAAI,EACJJ,KAAM,gBACNY,SAAU,OACVb,MAAO,qBAET,CACEK,GAAI,EACJJ,KAAM,eACNY,SAAU,YACVb,MAAO,qBAET,CACEK,GAAI,EACJJ,KAAM,mBACNY,SAAU,WACVb,MAAO,sBAET,CACEK,GAAI,EACJJ,KAAM,mBACNY,SAAU,WACVb,MAAO,6BAET,CACEK,GAAI,EACJJ,KAAM,mBACNY,SAAU,SACVb,MAAO,4BAET,CACEK,GAAI,EACJJ,KAAM,uBACNY,SAAU,mBACVb,MAAO,2BAET,CACEK,GAAI,EACJJ,KAAM,kBACNY,SAAU,eACVb,MAAO,0BAET,CACEK,GAAI,EACJJ,KAAM,2BACNY,SAAU,gBACVb,MAAO,wBAET,CACEK,GAAI,EACJJ,KAAM,kBACNY,SAAU,WACVb,MAAO,2BAET,CACEK,GAAI,GACJJ,KAAM,qBACNY,SAAU,iBACVb,MAAO,2BCrDEc,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOlB,EAAP,KAAaqB,EAAb,KACMd,EAAK,YAAOe,GAClB,EAA0BJ,mBAAS,YAAIK,IAAvC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KA4BA,OACE,sBAAK7B,UAAU,MAAf,UACE,+CAEA,uBAAM8B,OAAO,aAAaC,OAAO,OAAOC,SA9B5C,SAAsBC,GAKpB,GAJAA,EAAMC,iBACNT,EAAcG,IAAYV,GAA0B,KAAhBA,EAAKiB,QACzCR,EAAsB,IAAT5B,GAER6B,KAAYA,GAAaV,GAAwB,KAAhBA,EAAKiB,WACrCP,GAAoB,IAAT7B,GADjB,CAKA,IACMqC,EAAa,CACjB7B,GAFmB8B,KAAKC,IAAL,MAAAD,KAAI,YAAQxB,EAAMF,KAAI,SAACN,GAAD,OAAUA,EAAKE,OAAjC,QAAsC,KAAK,EAGlEC,MAAOU,EACPJ,WAAW,EACXJ,OAAQX,GAGVwB,EAAS,GAAD,mBAAKV,GAAL,CAAYuB,KACpBjB,EAAQ,IACRC,EAAQ,GACRK,GAAa,GACbE,GAAa,GACbE,GAAW,KAOT,UACE,sBAAK7B,UAAU,QAAf,UACE,uBAAOuC,QAAQ,OAAf,oBACA,uBACEhC,GAAG,OACHiC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOxB,EACPyB,SAAU,SAAAV,GACRd,EAAQc,EAAMW,OAAOF,OACrBjB,GAAa,IAEfoB,OAAQ,kBAAMhB,GAAW,MAE1BL,GAAa,sBAAMxB,UAAU,QAAhB,qCAGhB,sBAAKA,UAAU,QAAf,UACE,uBAAOuC,QAAQ,OAAf,mBACA,yBACEhC,GAAG,OACH,UAAQ,aACRmC,MAAO3C,EACP4C,SAAU,SAAAV,GAAK,OAAIb,GAASa,EAAMW,OAAOF,QACzCG,OAAQ,WACNhB,GAAW,GACXF,GAAa,IAPjB,UAUE,wBAAQe,MAAM,IAAII,UAAQ,EAA1B,2BACCxC,EAAMK,KAAI,SAACoC,GAAD,OACT,wBAA2BL,MAAOK,EAAUxC,GAA5C,SACGwC,EAAU5C,MADA4C,EAAUxC,UAK1BmB,GAAa,sBAAM1B,UAAU,QAAhB,qCAGhB,wBACEwC,KAAK,SACL,UAAQ,eAFV,oBAQF,cAAC,EAAD,CACE3B,MAAOA,EACPP,MAAOA,QC5Ff0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c3a9bb2f.chunk.js","sourcesContent":["import React from 'react';\n\ntype User = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\ntype UserInfoProps = {\n  key: number;\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ key, user }) => {\n  return (\n    <a key={key} className=\"UserInfo\" href={user.email}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\n\ntype Users = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\ntype Todo = {\n  id: number;\n  title: string;\n  userId: number;\n};\n\ntype TodoInfoProps = {\n  todo: Todo;\n  users: Users[];\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo, users }) => {\n  return (\n    <article data-id={todo.id} className=\"TodoInfo TodoInfo--completed\">\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {users.filter((user) => todo.userId === user.id).map((user) => (\n        <UserInfo key={user.id} user={user} />\n      ))}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Todos = {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n};\n\ntype Users = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\ntype TodoListProps = {\n  todos: Todos[];\n  users: Users[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          todo={todo}\n          users={users}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nexport const App = () => {\n  const [text, setText] = useState('');\n  const [user, setUser] = useState(0);\n  const users = [...usersFromServer];\n  const [todos, setTodos] = useState([...todosFromServer]);\n  const [errorText, setErrorText] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n  const [touched, setTouched] = useState(false);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    setErrorText((touched && !text) || (text.trim() === ''));\n    setErrorUser(user === 0);\n\n    if (!touched || (touched && (!text || text.trim() === ''))\n      || (touched && user === 0)) {\n      return;\n    }\n\n    const newIdComment = Math.max(...todos.map((todo) => todo.id), 0) + 1;\n    const newComment = {\n      id: newIdComment,\n      title: text,\n      completed: false,\n      userId: user,\n    };\n\n    setTodos([...todos, newComment]);\n    setText('');\n    setUser(0);\n    setErrorText(false);\n    setErrorUser(false);\n    setTouched(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"text\">Title:</label>\n          <input\n            id=\"text\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={text}\n            onChange={event => {\n              setText(event.target.value);\n              setErrorText(false);\n            }}\n            onBlur={() => setTouched(true)}\n          />\n          {errorText && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:</label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={event => setUser(+event.target.value)}\n            onBlur={() => {\n              setTouched(true);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map((paramUser) => (\n              <option key={paramUser.id} value={paramUser.id}>\n                {paramUser.name}\n              </option>\n            ))}\n          </select>\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n        users={users}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}